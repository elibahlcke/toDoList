{"version":3,"sources":["components/FormToDo.jsx","components/Checkbox.jsx","components/Tasklist.jsx","components/Container.jsx","App.js","index.js"],"names":["FormToDo","props","useState","description","setDescription","handleAddItem","onSubmit","e","preventDefault","done","id","Date","toString","className","type","value","onChange","target","disabled","Checkbox","data","name","defaultChecked","Tasklist","list","setList","onChangeStatus","checked","updateList","map","item","chk","length","onClick","filter","Container","addItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAsCeA,EApCE,SAAAC,GACb,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACQC,EAAkBJ,EAAlBI,cAYR,OACI,sBAAMC,SAZW,SAAAC,GACjBA,EAAEC,iBAEFH,EAAc,CACVI,MAAM,EACNC,KAAM,IAAIC,MAAQC,WAClBT,gBAEJC,EAAe,KAIf,SACI,qBAAKS,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBACIC,KAAK,OACLD,UAAU,OACVE,MAAOZ,EACPa,SAAU,SAAAT,GAAC,OAAIH,EAAeG,EAAEU,OAAOF,UAE3C,wBACIF,UAAU,cACVK,SAAUf,EAAc,GAAK,WAFjC,yB,OCELgB,EA1BE,SAAAlB,GACb,IACIe,EAEAf,EAFAe,SADJ,EAGIf,EADAmB,KAAQV,EAFZ,EAEYA,GAAIP,EAFhB,EAEgBA,YAAaM,EAF7B,EAE6BA,KAG7B,OACI,cAAC,WAAD,UACI,wBAAQI,UAAU,gBAAlB,UACI,uBACIC,KAAK,WACLD,UAAU,cACVQ,KAAMX,EACNY,eAAgBb,EAChBO,SAAUA,IAEd,qBAAKH,UAAU,aAAf,SACKV,UCoBNoB,EApCE,SAAAtB,GACb,IAAQuB,EAAkBvB,EAAlBuB,KAAMC,EAAYxB,EAAZwB,QAERC,EAAiB,SAAAnB,GACnB,MAA0BA,EAAEU,OAApBI,EAAR,EAAQA,KAAMM,EAAd,EAAcA,QAERC,EAAaJ,EAAKK,KAAI,SAAAC,GAAI,kCACzBA,GADyB,IAE5BrB,KAAMqB,EAAKpB,KAAOW,EAAOM,EAAUG,EAAKrB,UAE5CgB,EAAQG,IAONG,EAAMP,EAAKK,KAAI,SAAAC,GAAI,OACjB,cAAC,EAAD,CAAwBV,KAAMU,EAAMd,SAAUU,GAA/BI,EAAKpB,OAI5B,OACI,sBAAKG,UAAU,YAAf,UACKW,EAAKQ,OAASD,EAAM,WACpBP,EAAKQ,OACF,4BACI,wBAAQnB,UAAU,cAAcoB,QAdtB,SAAA1B,GACtB,IAAMqB,EAAaJ,EAAKU,QAAO,SAAAJ,GAAI,OAAKA,EAAKrB,QAC7CgB,EAAQG,IAYI,sCAIJ,SChBDO,EAdG,WACd,MAAwBjC,mBAAS,IAAjC,mBAAOsB,EAAP,KAAaC,EAAb,KAKA,OACI,gCACI,cAAC,EAAD,CAAUpB,cANI,SAAA+B,GAClBX,EAAQ,GAAD,mBAAKD,GAAL,CAAWY,QAMd,cAAC,EAAD,CAAUZ,KAAMA,EAAMC,QAASA,Q,MCC5BY,MAVf,WAEE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCJNyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d10f8049.chunk.js","sourcesContent":["import React, { useState} from 'react'\r\n\r\nconst FormToDo = props => {\r\n    const [description, setDescription] = useState(\"\");\r\n    const { handleAddItem } = props;\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        handleAddItem({\r\n            done: false,\r\n            id: (+new Date()).toString(),\r\n            description\r\n        });\r\n        setDescription(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"todo-list\">\r\n                <div className=\"file-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"text\"\r\n                        value={description}\r\n                        onChange={e => setDescription(e.target.value)}\r\n                    />\r\n                    <button \r\n                        className=\"button pink\"\r\n                        disabled={description ? \"\" : \"disabled\"}\r\n                     >Add</button>   \r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default FormToDo\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Checkbox = props => {\r\n    const {\r\n        onChange,\r\n        data: { id, description, done}\r\n    } = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            <label  className=\"todo new-item\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    className=\"todo__state\"\r\n                    name={id}\r\n                    defaultChecked={done}\r\n                    onChange={onChange} \r\n                />\r\n                <div className=\"todo__text\">\r\n                    {description}\r\n                </div>\r\n\r\n            </label>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default Checkbox\r\n","import React from 'react'\r\nimport Checkbox from './Checkbox'\r\n\r\nconst Tasklist = props => {\r\n    const { list, setList } = props;\r\n\r\n    const onChangeStatus = e => {\r\n        const { name, checked } = e.target;\r\n\r\n        const updateList = list.map(item => ({\r\n            ...item,\r\n            done: item.id === name ? checked : item.done\r\n        }));\r\n        setList(updateList)\r\n    };\r\n\r\n    const onClickRemoveItem = e => {\r\n        const updateList = list.filter(item => !item.done);\r\n        setList(updateList);\r\n    }\r\n    const chk = list.map(item => (\r\n            <Checkbox key={item.id} data={item} onChange={onChangeStatus} />\r\n    )\r\n    );\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            {list.length ? chk : \"No Tasks\"}\r\n            {list.length ? (\r\n                <p>\r\n                    <button className=\"button blue\" onClick={onClickRemoveItem} >\r\n                        Delete all done tasks.\r\n                    </button>\r\n                </p>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tasklist\r\n","import React, { useState } from 'react';\r\nimport FormToDo from './FormToDo';\r\nimport Tasklist from './Tasklist'\r\n\r\nconst Container = () => {\r\n    const [list, setList] = useState([]);\r\n    const handleAddItem = addItem => {\r\n        setList([...list, addItem])\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormToDo handleAddItem={handleAddItem} />\r\n            <Tasklist list={list} setList={setList} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React, { useState } from 'react';\nimport Container from './components/Container'\nimport './styles/app.scss'\n\nfunction App() {\n  \n  return (\n    <div className=\"app\">\n      <Container />      \n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}